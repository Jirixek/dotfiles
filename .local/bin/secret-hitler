#!/usr/bin/env python3

import sys


# Add 0 at the end to get rid of -0

def oneBlue(total, blue):
    red = total - blue
    return 3 * (red / total) * ((red - 1) / (total - 1)) * (blue / (total - 2)) + 0


def twoBlue(total, blue):
    red = total - blue
    return 3 * (red / total) * (blue / (total - 1)) * ((blue - 1) / (total - 2)) + 0


def threeBlue(total, blue):
    red = total - blue
    return (blue / total) *  ((blue - 1) / (total - 1)) * ((blue - 2) / (total - 2)) + 0


def threeRed(total, blue):
    red = total - blue
    return (red / total) * ((red - 1) / (total - 1)) * ((red - 2) / (total - 2)) + 0


def atLeastOneBlue(total, blue):
    return 1 - threeRed(total, blue)


def printSingle(total, blue):
    print(f'>=1B: {100 * atLeastOneBlue(total, blue):.2f}%', \
          f' =1B: {100 * oneBlue(total, blue):.2f}%', \
          f' =2B: {100 * twoBlue(total, blue):.2f}%', \
          f' =3B: {100 * threeBlue(total, blue):.2f}%', sep='\n')


def printRange(total, blueLo, blueHi):
    print(f'>=1B: {100 * atLeastOneBlue(total, blueLo):.2f} - {100 * atLeastOneBlue(total, blueHi):.2f}%', \
          f' =1B: {100 * oneBlue(total, blueLo):.2f}% - {100 * oneBlue(total, blueHi):.2f}%', \
          f' =2B: {100 * twoBlue(total, blueLo):.2f}% - {100 * twoBlue(total, blueHi):.2f}%', \
          f' =3B: {100 * threeBlue(total, blueLo):.2f}% - {100 * threeBlue(total, blueHi):.2f}%', sep='\n')


def computeRange(totalStr, blueStr):
    blueLo, blueHi = [ int(i) for i in blueStr.split('-') ]
    printRange(int(totalStr), blueLo, blueHi)


def computeSingle(totalStr, blueStr):
    printSingle(int(totalStr), int(blueStr))


if __name__ == '__main__':
    print('Blue - total')

    for line in sys.stdin:
        try:
            if line.rstrip('\n') == 'quit' or line.rstrip('\n') == 'q':
                break;

            blueStr, totalStr = line.split(' ')

            if '-' in blueStr:
                computeRange(totalStr, blueStr)
            else:
                computeSingle(totalStr, blueStr)
        except:
            print('Invalid value')
            pass
